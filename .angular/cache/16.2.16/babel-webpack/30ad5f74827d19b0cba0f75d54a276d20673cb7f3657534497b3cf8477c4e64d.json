{"ast":null,"code":"import { FormGroup, UntypedFormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/users.service\";\nimport * as i2 from \"../../services/IToastr.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UsersComponent_form_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 3)(1, \"div\", 4);\n    i0.ɵɵelement(2, \"input\", 5)(3, \"input\", 6)(4, \"input\", 7)(5, \"input\", 8);\n    i0.ɵɵelementStart(6, \"div\", 9)(7, \"button\", 10);\n    i0.ɵɵtext(8, \"Submit\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.userForm);\n  }\n}\nexport let UsersComponent = /*#__PURE__*/(() => {\n  class UsersComponent {\n    constructor(usersService, toastrService) {\n      this.usersService = usersService;\n      this.toastrService = toastrService;\n    }\n    ngOnInit() {\n      this.getUsers();\n      this.createForm();\n    }\n    toggleForm() {\n      this.showUserForm = !this.showUserForm;\n    }\n    getUsers() {\n      this.loading = true;\n      this.usersService.getUsers().subscribe(users => {\n        this.users = users;\n        this.loading = false;\n      }, error => {\n        this.toastrService.handleError(error);\n        this.loading = false;\n      });\n    }\n    createForm() {\n      this.userForm = new FormGroup({\n        firstName: new UntypedFormControl(null, Validators.required),\n        lastName: new UntypedFormControl(null, Validators.required),\n        username: new UntypedFormControl(null, Validators.required),\n        email: new UntypedFormControl(null, Validators.required)\n      });\n    }\n    static {\n      this.ɵfac = function UsersComponent_Factory(t) {\n        return new (t || UsersComponent)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.IToastrService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: UsersComponent,\n        selectors: [[\"app-users\"]],\n        decls: 4,\n        vars: 1,\n        consts: [[1, \"n-pad-5\"], [1, \"button\", 3, \"click\"], [3, \"formGroup\", 4, \"ngIf\"], [3, \"formGroup\"], [1, \"border-radius-16\", \"box-shadow\", \"n-pad-2\"], [\"type\", \"text\", \"formControlName\", \"firstName\", \"placeholder\", \"First Name\", 1, \"text-input\"], [\"type\", \"text\", \"formControlName\", \"lastName\", \"placeholder\", \"Last Name\", 1, \"text-input\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"text-input\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\", 1, \"text-input\"], [1, \"flex\", \"justify-end\"], [\"type\", \"submit\", 1, \"button\"]],\n        template: function UsersComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n            i0.ɵɵlistener(\"click\", function UsersComponent_Template_button_click_1_listener() {\n              return ctx.toggleForm();\n            });\n            i0.ɵɵtext(2, \"Add new user\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(3, UsersComponent_form_3_Template, 9, 1, \"form\", 2);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ctx.showUserForm);\n          }\n        },\n        dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName]\n      });\n    }\n  }\n  return UsersComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
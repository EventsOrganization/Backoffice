{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./local-storage.service\";\nimport * as i3 from \"@ngrx/store\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(httpClient, localStorageService, store) {\n      this.httpClient = httpClient;\n      this.localStorageService = localStorageService;\n      this.store = store;\n      this.apiControllerUrl = `${environment.apiUrl}/auth`;\n      this.userToken$ = this.store.select(s => s.appAuth).pipe(map(b => b.userToken));\n    }\n    login(loginModel) {\n      return this.httpClient.post(`${this.apiControllerUrl}/login`, loginModel);\n    }\n    loggedIn(userTokenModel) {\n      this.setUserToken(userTokenModel);\n      this.localStorageService.set('tokenModel', userTokenModel.accessToken);\n    }\n    refresh() {\n      return this.httpClient.get(`${this.apiControllerUrl}/refresh`);\n    }\n    setUserToken(userToken) {\n      // this.store.dispatch(setUserToken({ userToken }));\n    }\n    deleteUserToken() {\n      // this.store.dispatch(deleteUserToken());\n    }\n    logout() {\n      this.localStorageService.remove('tokenModel');\n      this.deleteUserToken();\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(t) {\n        return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LocalStorageService), i0.ɵɵinject(i3.Store));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}